name: '02a - Basic testing for the Linux packages (short, for testing ci/cd)'

# Controls when the workflow will run
on:
  workflow_run:
    workflows:
      - '01a - Compile and build the packages for Linux (short, for testing ci/cd)'
    types:
      - 'completed'

env:
  # we use `${{ github.sha }}-${{ github.run_id }}_${{ github.run_attempt }}` so we get a (mostly) unique directory, to avoid folder collisions when multiple workflows are running
  BASE_DIR: '${{ github.sha }}-${{ github.run_id }}_${{ github.run_attempt }}'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  prepare:
    runs-on:
      - 'rhel8'
      - 'self-hosted'

    steps:

      - name: 'checkout the monitoring-plugins repo'
        uses: 'actions/checkout@v4'
        with:
          path: '${{ env.BASE_DIR }}/repos/monitoring-plugins'
          ref: '${{ github.event.workflow_run.head_sha }}'

      # using this instead of the official `download-artifact` action since this allows cross-workflow
      - name: 'download the monitoring-plugins-linux-packages artifact'
        id: 'download-artifact'
        uses: actions/download-artifact@v4
        with:
          name: 'monitoring-plugins-linux-packages'
          path: '${{ env.BASE_DIR }}/'
          repository: ${{ github.repository }}
          run-id: ${{ github.event.workflow_run.id }}

      - name: 'mkdir ${{ env.BASE_DIR }}/output'
        run: 'mkdir ${{ env.BASE_DIR }}/output'


  test-rhel9:
    runs-on:
      - 'rhel8'
      - 'self-hosted'
    needs:
      - 'prepare'

    steps:

      - name: 'mkdir ${{ env.BASE_DIR }}/output/rhel9'
        run: 'mkdir ${{ env.BASE_DIR }}/output/rhel9'

      - name: 'Test on RHEL8'
        run: |-
          podman run --interactive --rm \
          --mount type=bind,source=${{ env.BASE_DIR }}/output/rhel9,destination=/output,relabel=private \
          --mount type=bind,source=${{ env.BASE_DIR }}/repos,destination=/repos,relabel=shared,ro=true \
          --mount type=bind,source=${{ env.BASE_DIR }}/monitoring-plugins-linux-packages/rhel9,destination=/packages,relabel=shared,ro=true \
          registry.access.redhat.com/ubi9/ubi /bin/bash -x /repos/monitoring-plugins/testing/rhel/run-all


  # this would not work on the GitHub-hosted runners, as each job is isolated there,
  # but works when self-hosted (since there are no parallel jobs)
  upload-outputs:
    runs-on:
      - 'rhel8'
      - 'self-hosted'
    needs:  # we want this to run after the above jobs
      - 'test-rhel9'
    if: '${{ always() }}' # however, we want to upload the artifacts even if one of the job fails

    steps:

      - name: 'upload the output as monitoring-plugins-test-output'
        uses: 'actions/upload-artifact@v4'
        with:
          name: 'monitoring-plugins-test-output'
          path: '${{ env.BASE_DIR }}/output/'


  cleanup:
    runs-on:
      - 'rhel8'
      - 'self-hosted'
    needs:  # we want this to run after the above jobs
      - 'upload-outputs'

    steps:

      - name: 'rm -rf ${{ env.BASE_DIR }}'
        run: 'rm -rf ${{ env.BASE_DIR }}'
